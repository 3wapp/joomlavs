{"name":"JoomlaVS","tagline":"A black box, Ruby powered, Joomla vulnerability scanner","body":"# joomlavs [![Build Status](https://travis-ci.org/rastating/joomlavs.svg?branch=master)](https://travis-ci.org/rastating/joomlavs) [![Code Climate](https://codeclimate.com/github/rastating/joomlavs/badges/gpa.svg)](https://codeclimate.com/github/rastating/joomlavs)\r\nA black box, Ruby powered, Joomla vulnerability scanner\r\n\r\n## What is it?\r\nJoomla VS is a Ruby application that can help automate assessing how vulnerable a Joomla installation is to exploitation. It supports basic finger printing and can scan for vulnerabilities in components, modules and templates as well as vulnerabilities that exist within Joomla itself.\r\n\r\n## License\r\nCopyright (C) 2015 rastating\r\n\r\nRunning Joomla VS against websites without prior mutual consent may be illegal in your country. The author and parties involved in its development accept no liability and are not responsible for any misuse or damage caused by Joomla VS.\r\n\r\nThis program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\r\n\r\nThis program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.\r\n\r\nYou should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n## How to install\r\nJoomla VS has so far only been tested on Debian, but the installation process should be similar across most operating systems.\r\n\r\n1. Ensure Ruby [2.0 or above] is installed on your system\r\n2. Clone the source code using ```git clone https://github.com/rastating/joomlavs.git```\r\n3. Install bundler and required gems using ```sudo gem install bundler && bundle install```\r\n\r\n## How to use\r\nThe only required option is the ```-u``` / ```--url``` option, which specifies the address to target. To do a full scan, however, the ```--scan-all``` option should also be specified, e.g. ```ruby joomlavs.rb -u yourjoomlatarget.com --scan-all```.\r\n\r\nA full list of options can be found below:\r\n\r\n```\r\nusage: joomlavs.rb [options]\r\nBasic options\r\n    -u, --url              The Joomla URL/domain to scan.\r\n    --basic-auth           <username:password> The basic HTTP authentication credentials\r\n    -v, --verbose          Enable verbose mode\r\nEnumeration options\r\n    -a, --scan-all         Scan for all vulnerable extensions\r\n    -c, --scan-components  Scan for vulnerable components\r\n    -m, --scan-modules     Scan for vulnerable modules\r\n    -t, --scan-templates   Scan for vulnerable templates\r\n    -q, --quiet            Scan using only passive methods\r\nAdvanced options\r\n    --follow-redirection   Automatically follow redirections\r\n    --no-colour            Disable colours in output\r\n    --proxy                <[protocol://]host:port> HTTP, SOCKS4 SOCKS4A and SOCKS5 are supported. If no protocol is given, HTTP will be used\r\n    --proxy-auth           <username:password> The proxy authentication credentials\r\n    --threads              The number of threads to use when multi-threading requests\r\n    --user-agent           The user agent string to send with all requests\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}